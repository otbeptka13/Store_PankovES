#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace StoreDomainObject
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="pankoves")]
	public partial class StoreDataBaseDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Определения метода расширяемости
    partial void OnCreated();
    partial void InsertSettings(Settings instance);
    partial void UpdateSettings(Settings instance);
    partial void DeleteSettings(Settings instance);
    partial void InsertGoodTypes(GoodTypes instance);
    partial void UpdateGoodTypes(GoodTypes instance);
    partial void DeleteGoodTypes(GoodTypes instance);
    partial void InsertGoods(Goods instance);
    partial void UpdateGoods(Goods instance);
    partial void DeleteGoods(Goods instance);
    partial void InsertFeedBacks(FeedBacks instance);
    partial void UpdateFeedBacks(FeedBacks instance);
    partial void DeleteFeedBacks(FeedBacks instance);
    partial void InsertWishList(WishList instance);
    partial void UpdateWishList(WishList instance);
    partial void DeleteWishList(WishList instance);
    partial void InsertUsers(Users instance);
    partial void UpdateUsers(Users instance);
    partial void DeleteUsers(Users instance);
    partial void InsertUserRoles(UserRoles instance);
    partial void UpdateUserRoles(UserRoles instance);
    partial void DeleteUserRoles(UserRoles instance);
    partial void InsertWatchedGood(WatchedGood instance);
    partial void UpdateWatchedGood(WatchedGood instance);
    partial void DeleteWatchedGood(WatchedGood instance);
    partial void InsertGoodProperties(GoodProperties instance);
    partial void UpdateGoodProperties(GoodProperties instance);
    partial void DeleteGoodProperties(GoodProperties instance);
    partial void InsertGoodImages(GoodImages instance);
    partial void UpdateGoodImages(GoodImages instance);
    partial void DeleteGoodImages(GoodImages instance);
    partial void InsertBasket(Basket instance);
    partial void UpdateBasket(Basket instance);
    partial void DeleteBasket(Basket instance);
    partial void InsertOrders(Orders instance);
    partial void UpdateOrders(Orders instance);
    partial void DeleteOrders(Orders instance);
    #endregion
		
		public StoreDataBaseDataContext() : 
				base(global::StoreDomainObject.Properties.Settings.Default.pankovesConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public StoreDataBaseDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public StoreDataBaseDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public StoreDataBaseDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public StoreDataBaseDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Settings> Settings
		{
			get
			{
				return this.GetTable<Settings>();
			}
		}
		
		public System.Data.Linq.Table<UsersView> UsersView
		{
			get
			{
				return this.GetTable<UsersView>();
			}
		}
		
		public System.Data.Linq.Table<GoodTypes> GoodTypes
		{
			get
			{
				return this.GetTable<GoodTypes>();
			}
		}
		
		public System.Data.Linq.Table<SupplyView> SupplyView
		{
			get
			{
				return this.GetTable<SupplyView>();
			}
		}
		
		public System.Data.Linq.Table<Goods> Goods
		{
			get
			{
				return this.GetTable<Goods>();
			}
		}
		
		public System.Data.Linq.Table<FeedBacks> FeedBacks
		{
			get
			{
				return this.GetTable<FeedBacks>();
			}
		}
		
		public System.Data.Linq.Table<WishList> WishList
		{
			get
			{
				return this.GetTable<WishList>();
			}
		}
		
		public System.Data.Linq.Table<Users> Users
		{
			get
			{
				return this.GetTable<Users>();
			}
		}
		
		public System.Data.Linq.Table<UserRoles> UserRoles
		{
			get
			{
				return this.GetTable<UserRoles>();
			}
		}
		
		public System.Data.Linq.Table<WatchedGood> WatchedGood
		{
			get
			{
				return this.GetTable<WatchedGood>();
			}
		}
		
		public System.Data.Linq.Table<GoodProperties> GoodProperties
		{
			get
			{
				return this.GetTable<GoodProperties>();
			}
		}
		
		public System.Data.Linq.Table<GoodImages> GoodImages
		{
			get
			{
				return this.GetTable<GoodImages>();
			}
		}
		
		public System.Data.Linq.Table<GoodsView> GoodsView
		{
			get
			{
				return this.GetTable<GoodsView>();
			}
		}
		
		public System.Data.Linq.Table<Basket> Basket
		{
			get
			{
				return this.GetTable<Basket>();
			}
		}
		
		public System.Data.Linq.Table<Orders> Orders
		{
			get
			{
				return this.GetTable<Orders>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="lk.ChangePassword")]
		public int ChangePassword([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="UniqueIdentifier")] System.Nullable<System.Guid> token, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(1000)")] string newHashPassword, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="BigInt")] ref System.Nullable<long> userId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), token, newHashPassword, userId);
			userId = ((System.Nullable<long>)(result.GetParameterValue(2)));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="lk.GenerateToken")]
		public int GenerateToken([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="BigInt")] System.Nullable<long> userId, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="UniqueIdentifier")] ref System.Nullable<System.Guid> token)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userId, token);
			token = ((System.Nullable<System.Guid>)(result.GetParameterValue(1)));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="lk.SetUserConfirmed")]
		public int SetUserConfirmed([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="UniqueIdentifier")] System.Nullable<System.Guid> token, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="BigInt")] ref System.Nullable<long> userId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), token, userId);
			userId = ((System.Nullable<long>)(result.GetParameterValue(1)));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="lk.IsLogin", IsComposable=true)]
		public System.Nullable<long> IsLogin([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(100)")] string email, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(1000)")] string hashPassword)
		{
			return ((System.Nullable<long>)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), email, hashPassword).ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="lk.RegisterUser")]
		public int RegisterUser([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(256)")] string email, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(256)")] string passwordHash, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(128)")] string phoneNumber, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(128)")] string name, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="BigInt")] ref System.Nullable<long> userId, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(1000)")] ref string message)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), email, passwordHash, phoneNumber, name, userId, message);
			userId = ((System.Nullable<long>)(result.GetParameterValue(4)));
			message = ((string)(result.GetParameterValue(5)));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="store.GetFullInfo", IsComposable=true)]
		public string GetFullInfo([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="BigInt")] System.Nullable<long> goodId)
		{
			return ((string)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), goodId).ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="lk.GetNowWatching", IsComposable=true)]
		public IQueryable<GetNowWatchingResult> GetNowWatching()
		{
			return this.CreateMethodCallQuery<GetNowWatchingResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="lk.LeaveFeedback")]
		public int LeaveFeedback([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> mark, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(MAX)")] string message, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="BigInt")] System.Nullable<long> goodId, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="BigInt")] System.Nullable<long> userId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), mark, message, goodId, userId);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="lk.AddNowWatching")]
		public int AddNowWatching([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="BigInt")] System.Nullable<long> goodId, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="BigInt")] System.Nullable<long> userId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), goodId, userId);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="lk.AddBasket")]
		public int AddBasket([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="BigInt")] System.Nullable<long> userId, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="BigInt")] System.Nullable<long> goodId, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Decimal(18,2)")] System.Nullable<decimal> count, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Bit")] System.Nullable<bool> isFastPay, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="BigInt")] ref System.Nullable<long> packId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userId, goodId, count, isFastPay, packId);
			packId = ((System.Nullable<long>)(result.GetParameterValue(4)));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="lk.SetDeliverly")]
		public int SetDeliverly([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="BigInt")] System.Nullable<long> packId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), packId);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="lk.Pay")]
		public int Pay([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="BigInt")] System.Nullable<long> packId, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="BigInt")] System.Nullable<long> userId, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> countInBasket, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="DateTime")] System.Nullable<System.DateTime> payDate, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(50)")] string transactionNumber, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Decimal(18,2)")] System.Nullable<decimal> totalSumm)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), packId, userId, countInBasket, payDate, transactionNumber, totalSumm);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="lk.PopularGoods", IsComposable=true)]
		public IQueryable<PopularGoodsResult> PopularGoods()
		{
			return this.CreateMethodCallQuery<PopularGoodsResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="lk.Settings")]
	public partial class Settings : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _id;
		
		private string _name;
		
		private string _value;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(long value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnvalueChanging(string value);
    partial void OnvalueChanged();
    #endregion
		
		public Settings()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(100)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_value", DbType="VarChar(1000)")]
		public string value
		{
			get
			{
				return this._value;
			}
			set
			{
				if ((this._value != value))
				{
					this.OnvalueChanging(value);
					this.SendPropertyChanging();
					this._value = value;
					this.SendPropertyChanged("value");
					this.OnvalueChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="lk.UsersView")]
	public partial class UsersView
	{
		
		private long _id;
		
		private string _email;
		
		private System.Nullable<bool> _emailConfirmed;
		
		private string _phoneNumber;
		
		private System.Nullable<System.DateTime> _dateRegistration;
		
		private System.Nullable<System.Guid> _generateToken;
		
		private System.Nullable<System.DateTime> _dateConfirmation;
		
		private string _name;
		
		private string _role;
		
		public UsersView()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="BigInt NOT NULL")]
		public long id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this._id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="NVarChar(256)")]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this._email = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_emailConfirmed", DbType="Bit")]
		public System.Nullable<bool> emailConfirmed
		{
			get
			{
				return this._emailConfirmed;
			}
			set
			{
				if ((this._emailConfirmed != value))
				{
					this._emailConfirmed = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_phoneNumber", DbType="NVarChar(128)")]
		public string phoneNumber
		{
			get
			{
				return this._phoneNumber;
			}
			set
			{
				if ((this._phoneNumber != value))
				{
					this._phoneNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dateRegistration", DbType="DateTime")]
		public System.Nullable<System.DateTime> dateRegistration
		{
			get
			{
				return this._dateRegistration;
			}
			set
			{
				if ((this._dateRegistration != value))
				{
					this._dateRegistration = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_generateToken", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> generateToken
		{
			get
			{
				return this._generateToken;
			}
			set
			{
				if ((this._generateToken != value))
				{
					this._generateToken = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dateConfirmation", DbType="DateTime")]
		public System.Nullable<System.DateTime> dateConfirmation
		{
			get
			{
				return this._dateConfirmation;
			}
			set
			{
				if ((this._dateConfirmation != value))
				{
					this._dateConfirmation = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(200)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this._name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_role", DbType="VarChar(100)")]
		public string role
		{
			get
			{
				return this._role;
			}
			set
			{
				if ((this._role != value))
				{
					this._role = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="store.GoodTypes")]
	public partial class GoodTypes : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _id;
		
		private string _name;
		
		private string _info;
		
		private string _imageUrl;
		
		private EntitySet<Goods> _Goods;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(long value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OninfoChanging(string value);
    partial void OninfoChanged();
    partial void OnimageUrlChanging(string value);
    partial void OnimageUrlChanged();
    #endregion
		
		public GoodTypes()
		{
			this._Goods = new EntitySet<Goods>(new Action<Goods>(this.attach_Goods), new Action<Goods>(this.detach_Goods));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(25)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_info", DbType="NVarChar(50)")]
		public string info
		{
			get
			{
				return this._info;
			}
			set
			{
				if ((this._info != value))
				{
					this.OninfoChanging(value);
					this.SendPropertyChanging();
					this._info = value;
					this.SendPropertyChanged("info");
					this.OninfoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_imageUrl", DbType="VarChar(200)")]
		public string imageUrl
		{
			get
			{
				return this._imageUrl;
			}
			set
			{
				if ((this._imageUrl != value))
				{
					this.OnimageUrlChanging(value);
					this.SendPropertyChanging();
					this._imageUrl = value;
					this.SendPropertyChanged("imageUrl");
					this.OnimageUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GoodTypes_Goods", Storage="_Goods", ThisKey="id", OtherKey="typeId")]
		public EntitySet<Goods> Goods
		{
			get
			{
				return this._Goods;
			}
			set
			{
				this._Goods.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Goods(Goods entity)
		{
			this.SendPropertyChanging();
			entity.GoodTypes = this;
		}
		
		private void detach_Goods(Goods entity)
		{
			this.SendPropertyChanging();
			entity.GoodTypes = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="store.SupplyView")]
	public partial class SupplyView
	{
		
		private long _id;
		
		private long _providerId;
		
		private string _name;
		
		private string _email;
		
		private string _phone;
		
		private long _shopId;
		
		private string _adress;
		
		private System.TimeSpan _timeOpen;
		
		private System.TimeSpan _timeClose;
		
		private string _shopPhone;
		
		private long _goodId;
		
		private string _goodName;
		
		private System.Nullable<decimal> _count;
		
		private long _typeId;
		
		private decimal _price;
		
		private string _goodInfo;
		
		private string _typeName;
		
		private string _info;
		
		public SupplyView()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="BigInt NOT NULL")]
		public long id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this._id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_providerId", DbType="BigInt NOT NULL")]
		public long providerId
		{
			get
			{
				return this._providerId;
			}
			set
			{
				if ((this._providerId != value))
				{
					this._providerId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(25)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this._name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="NVarChar(50)")]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this._email = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_phone", DbType="NVarChar(20)")]
		public string phone
		{
			get
			{
				return this._phone;
			}
			set
			{
				if ((this._phone != value))
				{
					this._phone = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_shopId", DbType="BigInt NOT NULL")]
		public long shopId
		{
			get
			{
				return this._shopId;
			}
			set
			{
				if ((this._shopId != value))
				{
					this._shopId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_adress", DbType="NVarChar(100)")]
		public string adress
		{
			get
			{
				return this._adress;
			}
			set
			{
				if ((this._adress != value))
				{
					this._adress = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_timeOpen", DbType="Time NOT NULL")]
		public System.TimeSpan timeOpen
		{
			get
			{
				return this._timeOpen;
			}
			set
			{
				if ((this._timeOpen != value))
				{
					this._timeOpen = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_timeClose", DbType="Time NOT NULL")]
		public System.TimeSpan timeClose
		{
			get
			{
				return this._timeClose;
			}
			set
			{
				if ((this._timeClose != value))
				{
					this._timeClose = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_shopPhone", DbType="NVarChar(30)")]
		public string shopPhone
		{
			get
			{
				return this._shopPhone;
			}
			set
			{
				if ((this._shopPhone != value))
				{
					this._shopPhone = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_goodId", DbType="BigInt NOT NULL")]
		public long goodId
		{
			get
			{
				return this._goodId;
			}
			set
			{
				if ((this._goodId != value))
				{
					this._goodId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_goodName", DbType="NVarChar(25) NOT NULL", CanBeNull=false)]
		public string goodName
		{
			get
			{
				return this._goodName;
			}
			set
			{
				if ((this._goodName != value))
				{
					this._goodName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_count", DbType="Decimal(5,3)")]
		public System.Nullable<decimal> count
		{
			get
			{
				return this._count;
			}
			set
			{
				if ((this._count != value))
				{
					this._count = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_typeId", DbType="BigInt NOT NULL")]
		public long typeId
		{
			get
			{
				return this._typeId;
			}
			set
			{
				if ((this._typeId != value))
				{
					this._typeId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_price", DbType="Decimal(10,2) NOT NULL")]
		public decimal price
		{
			get
			{
				return this._price;
			}
			set
			{
				if ((this._price != value))
				{
					this._price = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_goodInfo", DbType="NVarChar(50)")]
		public string goodInfo
		{
			get
			{
				return this._goodInfo;
			}
			set
			{
				if ((this._goodInfo != value))
				{
					this._goodInfo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_typeName", DbType="NVarChar(25)")]
		public string typeName
		{
			get
			{
				return this._typeName;
			}
			set
			{
				if ((this._typeName != value))
				{
					this._typeName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_info", DbType="NVarChar(50)")]
		public string info
		{
			get
			{
				return this._info;
			}
			set
			{
				if ((this._info != value))
				{
					this._info = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="store.Goods")]
	public partial class Goods : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _id;
		
		private string _name;
		
		private long _typeId;
		
		private decimal _price;
		
		private string _info;
		
		private short _discount;
		
		private string _fullInfo;
		
		private EntitySet<FeedBacks> _FeedBacks;
		
		private EntitySet<WishList> _WishList;
		
		private EntitySet<WatchedGood> _WatchedGood;
		
		private EntitySet<GoodProperties> _GoodProperties;
		
		private EntitySet<GoodImages> _GoodImages;
		
		private EntitySet<Basket> _Basket;
		
		private EntityRef<GoodTypes> _GoodTypes;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(long value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OntypeIdChanging(long value);
    partial void OntypeIdChanged();
    partial void OnpriceChanging(decimal value);
    partial void OnpriceChanged();
    partial void OninfoChanging(string value);
    partial void OninfoChanged();
    partial void OndiscountChanging(short value);
    partial void OndiscountChanged();
    partial void OnfullInfoChanging(string value);
    partial void OnfullInfoChanged();
    #endregion
		
		public Goods()
		{
			this._FeedBacks = new EntitySet<FeedBacks>(new Action<FeedBacks>(this.attach_FeedBacks), new Action<FeedBacks>(this.detach_FeedBacks));
			this._WishList = new EntitySet<WishList>(new Action<WishList>(this.attach_WishList), new Action<WishList>(this.detach_WishList));
			this._WatchedGood = new EntitySet<WatchedGood>(new Action<WatchedGood>(this.attach_WatchedGood), new Action<WatchedGood>(this.detach_WatchedGood));
			this._GoodProperties = new EntitySet<GoodProperties>(new Action<GoodProperties>(this.attach_GoodProperties), new Action<GoodProperties>(this.detach_GoodProperties));
			this._GoodImages = new EntitySet<GoodImages>(new Action<GoodImages>(this.attach_GoodImages), new Action<GoodImages>(this.detach_GoodImages));
			this._Basket = new EntitySet<Basket>(new Action<Basket>(this.attach_Basket), new Action<Basket>(this.detach_Basket));
			this._GoodTypes = default(EntityRef<GoodTypes>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(25) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_typeId", DbType="BigInt NOT NULL")]
		public long typeId
		{
			get
			{
				return this._typeId;
			}
			set
			{
				if ((this._typeId != value))
				{
					if (this._GoodTypes.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OntypeIdChanging(value);
					this.SendPropertyChanging();
					this._typeId = value;
					this.SendPropertyChanged("typeId");
					this.OntypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_price", DbType="Decimal(10,2) NOT NULL")]
		public decimal price
		{
			get
			{
				return this._price;
			}
			set
			{
				if ((this._price != value))
				{
					this.OnpriceChanging(value);
					this.SendPropertyChanging();
					this._price = value;
					this.SendPropertyChanged("price");
					this.OnpriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_info", DbType="NVarChar(50)")]
		public string info
		{
			get
			{
				return this._info;
			}
			set
			{
				if ((this._info != value))
				{
					this.OninfoChanging(value);
					this.SendPropertyChanging();
					this._info = value;
					this.SendPropertyChanged("info");
					this.OninfoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_discount", DbType="SmallInt NOT NULL")]
		public short discount
		{
			get
			{
				return this._discount;
			}
			set
			{
				if ((this._discount != value))
				{
					this.OndiscountChanging(value);
					this.SendPropertyChanging();
					this._discount = value;
					this.SendPropertyChanged("discount");
					this.OndiscountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fullInfo", DbType="VarChar(MAX)")]
		public string fullInfo
		{
			get
			{
				return this._fullInfo;
			}
			set
			{
				if ((this._fullInfo != value))
				{
					this.OnfullInfoChanging(value);
					this.SendPropertyChanging();
					this._fullInfo = value;
					this.SendPropertyChanged("fullInfo");
					this.OnfullInfoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Goods_FeedBacks", Storage="_FeedBacks", ThisKey="id", OtherKey="goodId")]
		public EntitySet<FeedBacks> FeedBacks
		{
			get
			{
				return this._FeedBacks;
			}
			set
			{
				this._FeedBacks.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Goods_WishList", Storage="_WishList", ThisKey="id", OtherKey="goodId")]
		public EntitySet<WishList> WishList
		{
			get
			{
				return this._WishList;
			}
			set
			{
				this._WishList.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Goods_WatchedGood", Storage="_WatchedGood", ThisKey="id", OtherKey="goodId")]
		public EntitySet<WatchedGood> WatchedGood
		{
			get
			{
				return this._WatchedGood;
			}
			set
			{
				this._WatchedGood.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Goods_GoodProperties", Storage="_GoodProperties", ThisKey="id", OtherKey="goodId")]
		public EntitySet<GoodProperties> GoodProperties
		{
			get
			{
				return this._GoodProperties;
			}
			set
			{
				this._GoodProperties.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Goods_GoodImages", Storage="_GoodImages", ThisKey="id", OtherKey="goodId")]
		public EntitySet<GoodImages> GoodImages
		{
			get
			{
				return this._GoodImages;
			}
			set
			{
				this._GoodImages.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Goods_Basket", Storage="_Basket", ThisKey="id", OtherKey="goodId")]
		public EntitySet<Basket> Basket
		{
			get
			{
				return this._Basket;
			}
			set
			{
				this._Basket.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GoodTypes_Goods", Storage="_GoodTypes", ThisKey="typeId", OtherKey="id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public GoodTypes GoodTypes
		{
			get
			{
				return this._GoodTypes.Entity;
			}
			set
			{
				GoodTypes previousValue = this._GoodTypes.Entity;
				if (((previousValue != value) 
							|| (this._GoodTypes.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GoodTypes.Entity = null;
						previousValue.Goods.Remove(this);
					}
					this._GoodTypes.Entity = value;
					if ((value != null))
					{
						value.Goods.Add(this);
						this._typeId = value.id;
					}
					else
					{
						this._typeId = default(long);
					}
					this.SendPropertyChanged("GoodTypes");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_FeedBacks(FeedBacks entity)
		{
			this.SendPropertyChanging();
			entity.Goods = this;
		}
		
		private void detach_FeedBacks(FeedBacks entity)
		{
			this.SendPropertyChanging();
			entity.Goods = null;
		}
		
		private void attach_WishList(WishList entity)
		{
			this.SendPropertyChanging();
			entity.Goods = this;
		}
		
		private void detach_WishList(WishList entity)
		{
			this.SendPropertyChanging();
			entity.Goods = null;
		}
		
		private void attach_WatchedGood(WatchedGood entity)
		{
			this.SendPropertyChanging();
			entity.Goods = this;
		}
		
		private void detach_WatchedGood(WatchedGood entity)
		{
			this.SendPropertyChanging();
			entity.Goods = null;
		}
		
		private void attach_GoodProperties(GoodProperties entity)
		{
			this.SendPropertyChanging();
			entity.Goods = this;
		}
		
		private void detach_GoodProperties(GoodProperties entity)
		{
			this.SendPropertyChanging();
			entity.Goods = null;
		}
		
		private void attach_GoodImages(GoodImages entity)
		{
			this.SendPropertyChanging();
			entity.Goods = this;
		}
		
		private void detach_GoodImages(GoodImages entity)
		{
			this.SendPropertyChanging();
			entity.Goods = null;
		}
		
		private void attach_Basket(Basket entity)
		{
			this.SendPropertyChanging();
			entity.Goods = this;
		}
		
		private void detach_Basket(Basket entity)
		{
			this.SendPropertyChanging();
			entity.Goods = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="lk.FeedBacks")]
	public partial class FeedBacks : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _id;
		
		private long _userId;
		
		private int _mark;
		
		private string _message;
		
		private System.Nullable<System.DateTime> _created;
		
		private long _goodId;
		
		private EntityRef<Goods> _Goods;
		
		private EntityRef<Users> _Users;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(long value);
    partial void OnidChanged();
    partial void OnuserIdChanging(long value);
    partial void OnuserIdChanged();
    partial void OnmarkChanging(int value);
    partial void OnmarkChanged();
    partial void OnmessageChanging(string value);
    partial void OnmessageChanged();
    partial void OncreatedChanging(System.Nullable<System.DateTime> value);
    partial void OncreatedChanged();
    partial void OngoodIdChanging(long value);
    partial void OngoodIdChanged();
    #endregion
		
		public FeedBacks()
		{
			this._Goods = default(EntityRef<Goods>);
			this._Users = default(EntityRef<Users>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userId", DbType="BigInt NOT NULL")]
		public long userId
		{
			get
			{
				return this._userId;
			}
			set
			{
				if ((this._userId != value))
				{
					if (this._Users.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnuserIdChanging(value);
					this.SendPropertyChanging();
					this._userId = value;
					this.SendPropertyChanged("userId");
					this.OnuserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mark", DbType="Int NOT NULL")]
		public int mark
		{
			get
			{
				return this._mark;
			}
			set
			{
				if ((this._mark != value))
				{
					this.OnmarkChanging(value);
					this.SendPropertyChanging();
					this._mark = value;
					this.SendPropertyChanged("mark");
					this.OnmarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_message", DbType="NVarChar(MAX)")]
		public string message
		{
			get
			{
				return this._message;
			}
			set
			{
				if ((this._message != value))
				{
					this.OnmessageChanging(value);
					this.SendPropertyChanging();
					this._message = value;
					this.SendPropertyChanged("message");
					this.OnmessageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_created", DbType="DateTime")]
		public System.Nullable<System.DateTime> created
		{
			get
			{
				return this._created;
			}
			set
			{
				if ((this._created != value))
				{
					this.OncreatedChanging(value);
					this.SendPropertyChanging();
					this._created = value;
					this.SendPropertyChanged("created");
					this.OncreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_goodId", DbType="BigInt NOT NULL")]
		public long goodId
		{
			get
			{
				return this._goodId;
			}
			set
			{
				if ((this._goodId != value))
				{
					if (this._Goods.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OngoodIdChanging(value);
					this.SendPropertyChanging();
					this._goodId = value;
					this.SendPropertyChanged("goodId");
					this.OngoodIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Goods_FeedBacks", Storage="_Goods", ThisKey="goodId", OtherKey="id", IsForeignKey=true)]
		public Goods Goods
		{
			get
			{
				return this._Goods.Entity;
			}
			set
			{
				Goods previousValue = this._Goods.Entity;
				if (((previousValue != value) 
							|| (this._Goods.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Goods.Entity = null;
						previousValue.FeedBacks.Remove(this);
					}
					this._Goods.Entity = value;
					if ((value != null))
					{
						value.FeedBacks.Add(this);
						this._goodId = value.id;
					}
					else
					{
						this._goodId = default(long);
					}
					this.SendPropertyChanged("Goods");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Users_FeedBacks", Storage="_Users", ThisKey="userId", OtherKey="id", IsForeignKey=true)]
		public Users Users
		{
			get
			{
				return this._Users.Entity;
			}
			set
			{
				Users previousValue = this._Users.Entity;
				if (((previousValue != value) 
							|| (this._Users.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Users.Entity = null;
						previousValue.FeedBacks.Remove(this);
					}
					this._Users.Entity = value;
					if ((value != null))
					{
						value.FeedBacks.Add(this);
						this._userId = value.id;
					}
					else
					{
						this._userId = default(long);
					}
					this.SendPropertyChanged("Users");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="lk.WishList")]
	public partial class WishList : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _id;
		
		private long _userId;
		
		private long _goodId;
		
		private EntityRef<Goods> _Goods;
		
		private EntityRef<Users> _Users;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(long value);
    partial void OnidChanged();
    partial void OnuserIdChanging(long value);
    partial void OnuserIdChanged();
    partial void OngoodIdChanging(long value);
    partial void OngoodIdChanged();
    #endregion
		
		public WishList()
		{
			this._Goods = default(EntityRef<Goods>);
			this._Users = default(EntityRef<Users>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userId", DbType="BigInt NOT NULL")]
		public long userId
		{
			get
			{
				return this._userId;
			}
			set
			{
				if ((this._userId != value))
				{
					if (this._Users.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnuserIdChanging(value);
					this.SendPropertyChanging();
					this._userId = value;
					this.SendPropertyChanged("userId");
					this.OnuserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_goodId", DbType="BigInt NOT NULL")]
		public long goodId
		{
			get
			{
				return this._goodId;
			}
			set
			{
				if ((this._goodId != value))
				{
					if (this._Goods.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OngoodIdChanging(value);
					this.SendPropertyChanging();
					this._goodId = value;
					this.SendPropertyChanged("goodId");
					this.OngoodIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Goods_WishList", Storage="_Goods", ThisKey="goodId", OtherKey="id", IsForeignKey=true)]
		public Goods Goods
		{
			get
			{
				return this._Goods.Entity;
			}
			set
			{
				Goods previousValue = this._Goods.Entity;
				if (((previousValue != value) 
							|| (this._Goods.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Goods.Entity = null;
						previousValue.WishList.Remove(this);
					}
					this._Goods.Entity = value;
					if ((value != null))
					{
						value.WishList.Add(this);
						this._goodId = value.id;
					}
					else
					{
						this._goodId = default(long);
					}
					this.SendPropertyChanged("Goods");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Users_WishList", Storage="_Users", ThisKey="userId", OtherKey="id", IsForeignKey=true)]
		public Users Users
		{
			get
			{
				return this._Users.Entity;
			}
			set
			{
				Users previousValue = this._Users.Entity;
				if (((previousValue != value) 
							|| (this._Users.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Users.Entity = null;
						previousValue.WishList.Remove(this);
					}
					this._Users.Entity = value;
					if ((value != null))
					{
						value.WishList.Add(this);
						this._userId = value.id;
					}
					else
					{
						this._userId = default(long);
					}
					this.SendPropertyChanged("Users");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="lk.Users")]
	public partial class Users : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _id;
		
		private string _email;
		
		private System.Nullable<bool> _emailConfirmed;
		
		private string _passwordHash;
		
		private string _phoneNumber;
		
		private System.Nullable<System.DateTime> _dateRegistration;
		
		private System.Nullable<System.Guid> _generateToken;
		
		private System.Nullable<System.DateTime> _dateConfirmation;
		
		private string _name;
		
		private EntitySet<FeedBacks> _FeedBacks;
		
		private EntitySet<WishList> _WishList;
		
		private EntitySet<UserRoles> _UserRoles;
		
		private EntitySet<WatchedGood> _WatchedGood;
		
		private EntitySet<Basket> _Basket;
		
		private EntitySet<Orders> _Orders;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(long value);
    partial void OnidChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void OnemailConfirmedChanging(System.Nullable<bool> value);
    partial void OnemailConfirmedChanged();
    partial void OnpasswordHashChanging(string value);
    partial void OnpasswordHashChanged();
    partial void OnphoneNumberChanging(string value);
    partial void OnphoneNumberChanged();
    partial void OndateRegistrationChanging(System.Nullable<System.DateTime> value);
    partial void OndateRegistrationChanged();
    partial void OngenerateTokenChanging(System.Nullable<System.Guid> value);
    partial void OngenerateTokenChanged();
    partial void OndateConfirmationChanging(System.Nullable<System.DateTime> value);
    partial void OndateConfirmationChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    #endregion
		
		public Users()
		{
			this._FeedBacks = new EntitySet<FeedBacks>(new Action<FeedBacks>(this.attach_FeedBacks), new Action<FeedBacks>(this.detach_FeedBacks));
			this._WishList = new EntitySet<WishList>(new Action<WishList>(this.attach_WishList), new Action<WishList>(this.detach_WishList));
			this._UserRoles = new EntitySet<UserRoles>(new Action<UserRoles>(this.attach_UserRoles), new Action<UserRoles>(this.detach_UserRoles));
			this._WatchedGood = new EntitySet<WatchedGood>(new Action<WatchedGood>(this.attach_WatchedGood), new Action<WatchedGood>(this.detach_WatchedGood));
			this._Basket = new EntitySet<Basket>(new Action<Basket>(this.attach_Basket), new Action<Basket>(this.detach_Basket));
			this._Orders = new EntitySet<Orders>(new Action<Orders>(this.attach_Orders), new Action<Orders>(this.detach_Orders));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="NVarChar(256)")]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_emailConfirmed", DbType="Bit")]
		public System.Nullable<bool> emailConfirmed
		{
			get
			{
				return this._emailConfirmed;
			}
			set
			{
				if ((this._emailConfirmed != value))
				{
					this.OnemailConfirmedChanging(value);
					this.SendPropertyChanging();
					this._emailConfirmed = value;
					this.SendPropertyChanged("emailConfirmed");
					this.OnemailConfirmedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_passwordHash", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string passwordHash
		{
			get
			{
				return this._passwordHash;
			}
			set
			{
				if ((this._passwordHash != value))
				{
					this.OnpasswordHashChanging(value);
					this.SendPropertyChanging();
					this._passwordHash = value;
					this.SendPropertyChanged("passwordHash");
					this.OnpasswordHashChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_phoneNumber", DbType="NVarChar(128)")]
		public string phoneNumber
		{
			get
			{
				return this._phoneNumber;
			}
			set
			{
				if ((this._phoneNumber != value))
				{
					this.OnphoneNumberChanging(value);
					this.SendPropertyChanging();
					this._phoneNumber = value;
					this.SendPropertyChanged("phoneNumber");
					this.OnphoneNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dateRegistration", DbType="DateTime")]
		public System.Nullable<System.DateTime> dateRegistration
		{
			get
			{
				return this._dateRegistration;
			}
			set
			{
				if ((this._dateRegistration != value))
				{
					this.OndateRegistrationChanging(value);
					this.SendPropertyChanging();
					this._dateRegistration = value;
					this.SendPropertyChanged("dateRegistration");
					this.OndateRegistrationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_generateToken", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> generateToken
		{
			get
			{
				return this._generateToken;
			}
			set
			{
				if ((this._generateToken != value))
				{
					this.OngenerateTokenChanging(value);
					this.SendPropertyChanging();
					this._generateToken = value;
					this.SendPropertyChanged("generateToken");
					this.OngenerateTokenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dateConfirmation", DbType="DateTime")]
		public System.Nullable<System.DateTime> dateConfirmation
		{
			get
			{
				return this._dateConfirmation;
			}
			set
			{
				if ((this._dateConfirmation != value))
				{
					this.OndateConfirmationChanging(value);
					this.SendPropertyChanging();
					this._dateConfirmation = value;
					this.SendPropertyChanged("dateConfirmation");
					this.OndateConfirmationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(200)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Users_FeedBacks", Storage="_FeedBacks", ThisKey="id", OtherKey="userId")]
		public EntitySet<FeedBacks> FeedBacks
		{
			get
			{
				return this._FeedBacks;
			}
			set
			{
				this._FeedBacks.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Users_WishList", Storage="_WishList", ThisKey="id", OtherKey="userId")]
		public EntitySet<WishList> WishList
		{
			get
			{
				return this._WishList;
			}
			set
			{
				this._WishList.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Users_UserRoles", Storage="_UserRoles", ThisKey="id", OtherKey="userId")]
		public EntitySet<UserRoles> UserRoles
		{
			get
			{
				return this._UserRoles;
			}
			set
			{
				this._UserRoles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Users_WatchedGood", Storage="_WatchedGood", ThisKey="id", OtherKey="userId")]
		public EntitySet<WatchedGood> WatchedGood
		{
			get
			{
				return this._WatchedGood;
			}
			set
			{
				this._WatchedGood.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Users_Basket", Storage="_Basket", ThisKey="id", OtherKey="userId")]
		public EntitySet<Basket> Basket
		{
			get
			{
				return this._Basket;
			}
			set
			{
				this._Basket.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Users_Orders", Storage="_Orders", ThisKey="id", OtherKey="userId")]
		public EntitySet<Orders> Orders
		{
			get
			{
				return this._Orders;
			}
			set
			{
				this._Orders.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_FeedBacks(FeedBacks entity)
		{
			this.SendPropertyChanging();
			entity.Users = this;
		}
		
		private void detach_FeedBacks(FeedBacks entity)
		{
			this.SendPropertyChanging();
			entity.Users = null;
		}
		
		private void attach_WishList(WishList entity)
		{
			this.SendPropertyChanging();
			entity.Users = this;
		}
		
		private void detach_WishList(WishList entity)
		{
			this.SendPropertyChanging();
			entity.Users = null;
		}
		
		private void attach_UserRoles(UserRoles entity)
		{
			this.SendPropertyChanging();
			entity.Users = this;
		}
		
		private void detach_UserRoles(UserRoles entity)
		{
			this.SendPropertyChanging();
			entity.Users = null;
		}
		
		private void attach_WatchedGood(WatchedGood entity)
		{
			this.SendPropertyChanging();
			entity.Users = this;
		}
		
		private void detach_WatchedGood(WatchedGood entity)
		{
			this.SendPropertyChanging();
			entity.Users = null;
		}
		
		private void attach_Basket(Basket entity)
		{
			this.SendPropertyChanging();
			entity.Users = this;
		}
		
		private void detach_Basket(Basket entity)
		{
			this.SendPropertyChanging();
			entity.Users = null;
		}
		
		private void attach_Orders(Orders entity)
		{
			this.SendPropertyChanging();
			entity.Users = this;
		}
		
		private void detach_Orders(Orders entity)
		{
			this.SendPropertyChanging();
			entity.Users = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="lk.UserRoles")]
	public partial class UserRoles : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _userId;
		
		private long _roleId;
		
		private EntityRef<Users> _Users;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnuserIdChanging(long value);
    partial void OnuserIdChanged();
    partial void OnroleIdChanging(long value);
    partial void OnroleIdChanged();
    #endregion
		
		public UserRoles()
		{
			this._Users = default(EntityRef<Users>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userId", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long userId
		{
			get
			{
				return this._userId;
			}
			set
			{
				if ((this._userId != value))
				{
					if (this._Users.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnuserIdChanging(value);
					this.SendPropertyChanging();
					this._userId = value;
					this.SendPropertyChanged("userId");
					this.OnuserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_roleId", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long roleId
		{
			get
			{
				return this._roleId;
			}
			set
			{
				if ((this._roleId != value))
				{
					this.OnroleIdChanging(value);
					this.SendPropertyChanging();
					this._roleId = value;
					this.SendPropertyChanged("roleId");
					this.OnroleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Users_UserRoles", Storage="_Users", ThisKey="userId", OtherKey="id", IsForeignKey=true)]
		public Users Users
		{
			get
			{
				return this._Users.Entity;
			}
			set
			{
				Users previousValue = this._Users.Entity;
				if (((previousValue != value) 
							|| (this._Users.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Users.Entity = null;
						previousValue.UserRoles.Remove(this);
					}
					this._Users.Entity = value;
					if ((value != null))
					{
						value.UserRoles.Add(this);
						this._userId = value.id;
					}
					else
					{
						this._userId = default(long);
					}
					this.SendPropertyChanged("Users");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="lk.WatchedGood")]
	public partial class WatchedGood : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _id;
		
		private long _goodId;
		
		private System.DateTime _created;
		
		private long _userId;
		
		private EntityRef<Goods> _Goods;
		
		private EntityRef<Users> _Users;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(long value);
    partial void OnidChanged();
    partial void OngoodIdChanging(long value);
    partial void OngoodIdChanged();
    partial void OncreatedChanging(System.DateTime value);
    partial void OncreatedChanged();
    partial void OnuserIdChanging(long value);
    partial void OnuserIdChanged();
    #endregion
		
		public WatchedGood()
		{
			this._Goods = default(EntityRef<Goods>);
			this._Users = default(EntityRef<Users>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_goodId", DbType="BigInt NOT NULL")]
		public long goodId
		{
			get
			{
				return this._goodId;
			}
			set
			{
				if ((this._goodId != value))
				{
					if (this._Goods.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OngoodIdChanging(value);
					this.SendPropertyChanging();
					this._goodId = value;
					this.SendPropertyChanged("goodId");
					this.OngoodIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_created", DbType="DateTime NOT NULL")]
		public System.DateTime created
		{
			get
			{
				return this._created;
			}
			set
			{
				if ((this._created != value))
				{
					this.OncreatedChanging(value);
					this.SendPropertyChanging();
					this._created = value;
					this.SendPropertyChanged("created");
					this.OncreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userId", DbType="BigInt NOT NULL")]
		public long userId
		{
			get
			{
				return this._userId;
			}
			set
			{
				if ((this._userId != value))
				{
					if (this._Users.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnuserIdChanging(value);
					this.SendPropertyChanging();
					this._userId = value;
					this.SendPropertyChanged("userId");
					this.OnuserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Goods_WatchedGood", Storage="_Goods", ThisKey="goodId", OtherKey="id", IsForeignKey=true)]
		public Goods Goods
		{
			get
			{
				return this._Goods.Entity;
			}
			set
			{
				Goods previousValue = this._Goods.Entity;
				if (((previousValue != value) 
							|| (this._Goods.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Goods.Entity = null;
						previousValue.WatchedGood.Remove(this);
					}
					this._Goods.Entity = value;
					if ((value != null))
					{
						value.WatchedGood.Add(this);
						this._goodId = value.id;
					}
					else
					{
						this._goodId = default(long);
					}
					this.SendPropertyChanged("Goods");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Users_WatchedGood", Storage="_Users", ThisKey="userId", OtherKey="id", IsForeignKey=true)]
		public Users Users
		{
			get
			{
				return this._Users.Entity;
			}
			set
			{
				Users previousValue = this._Users.Entity;
				if (((previousValue != value) 
							|| (this._Users.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Users.Entity = null;
						previousValue.WatchedGood.Remove(this);
					}
					this._Users.Entity = value;
					if ((value != null))
					{
						value.WatchedGood.Add(this);
						this._userId = value.id;
					}
					else
					{
						this._userId = default(long);
					}
					this.SendPropertyChanged("Users");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="store.GoodProperties")]
	public partial class GoodProperties : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _id;
		
		private long _goodId;
		
		private string _name;
		
		private string _value;
		
		private EntityRef<Goods> _Goods;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(long value);
    partial void OnidChanged();
    partial void OngoodIdChanging(long value);
    partial void OngoodIdChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnvalueChanging(string value);
    partial void OnvalueChanged();
    #endregion
		
		public GoodProperties()
		{
			this._Goods = default(EntityRef<Goods>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_goodId", DbType="BigInt NOT NULL")]
		public long goodId
		{
			get
			{
				return this._goodId;
			}
			set
			{
				if ((this._goodId != value))
				{
					if (this._Goods.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OngoodIdChanging(value);
					this.SendPropertyChanging();
					this._goodId = value;
					this.SendPropertyChanged("goodId");
					this.OngoodIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_value", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string value
		{
			get
			{
				return this._value;
			}
			set
			{
				if ((this._value != value))
				{
					this.OnvalueChanging(value);
					this.SendPropertyChanging();
					this._value = value;
					this.SendPropertyChanged("value");
					this.OnvalueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Goods_GoodProperties", Storage="_Goods", ThisKey="goodId", OtherKey="id", IsForeignKey=true)]
		public Goods Goods
		{
			get
			{
				return this._Goods.Entity;
			}
			set
			{
				Goods previousValue = this._Goods.Entity;
				if (((previousValue != value) 
							|| (this._Goods.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Goods.Entity = null;
						previousValue.GoodProperties.Remove(this);
					}
					this._Goods.Entity = value;
					if ((value != null))
					{
						value.GoodProperties.Add(this);
						this._goodId = value.id;
					}
					else
					{
						this._goodId = default(long);
					}
					this.SendPropertyChanged("Goods");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="lk.GoodImages")]
	public partial class GoodImages : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _id;
		
		private long _goodId;
		
		private string _imageUrl;
		
		private System.Nullable<bool> _isPrimary;
		
		private EntityRef<Goods> _Goods;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(long value);
    partial void OnidChanged();
    partial void OngoodIdChanging(long value);
    partial void OngoodIdChanged();
    partial void OnimageUrlChanging(string value);
    partial void OnimageUrlChanged();
    partial void OnisPrimaryChanging(System.Nullable<bool> value);
    partial void OnisPrimaryChanged();
    #endregion
		
		public GoodImages()
		{
			this._Goods = default(EntityRef<Goods>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_goodId", DbType="BigInt NOT NULL")]
		public long goodId
		{
			get
			{
				return this._goodId;
			}
			set
			{
				if ((this._goodId != value))
				{
					if (this._Goods.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OngoodIdChanging(value);
					this.SendPropertyChanging();
					this._goodId = value;
					this.SendPropertyChanged("goodId");
					this.OngoodIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_imageUrl", DbType="VarChar(1000) NOT NULL", CanBeNull=false)]
		public string imageUrl
		{
			get
			{
				return this._imageUrl;
			}
			set
			{
				if ((this._imageUrl != value))
				{
					this.OnimageUrlChanging(value);
					this.SendPropertyChanging();
					this._imageUrl = value;
					this.SendPropertyChanged("imageUrl");
					this.OnimageUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isPrimary", DbType="Bit")]
		public System.Nullable<bool> isPrimary
		{
			get
			{
				return this._isPrimary;
			}
			set
			{
				if ((this._isPrimary != value))
				{
					this.OnisPrimaryChanging(value);
					this.SendPropertyChanging();
					this._isPrimary = value;
					this.SendPropertyChanged("isPrimary");
					this.OnisPrimaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Goods_GoodImages", Storage="_Goods", ThisKey="goodId", OtherKey="id", IsForeignKey=true)]
		public Goods Goods
		{
			get
			{
				return this._Goods.Entity;
			}
			set
			{
				Goods previousValue = this._Goods.Entity;
				if (((previousValue != value) 
							|| (this._Goods.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Goods.Entity = null;
						previousValue.GoodImages.Remove(this);
					}
					this._Goods.Entity = value;
					if ((value != null))
					{
						value.GoodImages.Add(this);
						this._goodId = value.id;
					}
					else
					{
						this._goodId = default(long);
					}
					this.SendPropertyChanged("Goods");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="store.GoodsView")]
	public partial class GoodsView
	{
		
		private long _id;
		
		private string _name;
		
		private long _typeId;
		
		private decimal _price;
		
		private string _info;
		
		private string _imageUrl;
		
		private short _discount;
		
		private string _typeName;
		
		private string _typeInfo;
		
		private System.Nullable<decimal> _mark;
		
		public GoodsView()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="BigInt NOT NULL")]
		public long id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this._id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(25) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this._name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_typeId", DbType="BigInt NOT NULL")]
		public long typeId
		{
			get
			{
				return this._typeId;
			}
			set
			{
				if ((this._typeId != value))
				{
					this._typeId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_price", DbType="Decimal(10,2) NOT NULL")]
		public decimal price
		{
			get
			{
				return this._price;
			}
			set
			{
				if ((this._price != value))
				{
					this._price = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_info", DbType="NVarChar(500)")]
		public string info
		{
			get
			{
				return this._info;
			}
			set
			{
				if ((this._info != value))
				{
					this._info = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_imageUrl", DbType="VarChar(1000)")]
		public string imageUrl
		{
			get
			{
				return this._imageUrl;
			}
			set
			{
				if ((this._imageUrl != value))
				{
					this._imageUrl = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_discount", DbType="SmallInt NOT NULL")]
		public short discount
		{
			get
			{
				return this._discount;
			}
			set
			{
				if ((this._discount != value))
				{
					this._discount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_typeName", DbType="NVarChar(25)")]
		public string typeName
		{
			get
			{
				return this._typeName;
			}
			set
			{
				if ((this._typeName != value))
				{
					this._typeName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_typeInfo", DbType="NVarChar(50)")]
		public string typeInfo
		{
			get
			{
				return this._typeInfo;
			}
			set
			{
				if ((this._typeInfo != value))
				{
					this._typeInfo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mark", DbType="Decimal(5,1)")]
		public System.Nullable<decimal> mark
		{
			get
			{
				return this._mark;
			}
			set
			{
				if ((this._mark != value))
				{
					this._mark = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="lk.Basket")]
	public partial class Basket : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _id;
		
		private System.Nullable<long> _packId;
		
		private long _userId;
		
		private System.DateTime _created;
		
		private System.Nullable<decimal> _summOne;
		
		private System.Nullable<decimal> _count;
		
		private byte _status;
		
		private long _goodId;
		
		private bool _isFastPay;
		
		private System.Nullable<decimal> _summTotal;
		
		private System.Nullable<long> _orderId;
		
		private EntityRef<Goods> _Goods;
		
		private EntityRef<Users> _Users;
		
		private EntityRef<Orders> _Orders;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(long value);
    partial void OnidChanged();
    partial void OnpackIdChanging(System.Nullable<long> value);
    partial void OnpackIdChanged();
    partial void OnuserIdChanging(long value);
    partial void OnuserIdChanged();
    partial void OncreatedChanging(System.DateTime value);
    partial void OncreatedChanged();
    partial void OnsummOneChanging(System.Nullable<decimal> value);
    partial void OnsummOneChanged();
    partial void OncountChanging(System.Nullable<decimal> value);
    partial void OncountChanged();
    partial void OnstatusChanging(byte value);
    partial void OnstatusChanged();
    partial void OngoodIdChanging(long value);
    partial void OngoodIdChanged();
    partial void OnisFastPayChanging(bool value);
    partial void OnisFastPayChanged();
    partial void OnsummTotalChanging(System.Nullable<decimal> value);
    partial void OnsummTotalChanged();
    partial void OnorderIdChanging(System.Nullable<long> value);
    partial void OnorderIdChanged();
    #endregion
		
		public Basket()
		{
			this._Goods = default(EntityRef<Goods>);
			this._Users = default(EntityRef<Users>);
			this._Orders = default(EntityRef<Orders>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_packId", DbType="BigInt")]
		public System.Nullable<long> packId
		{
			get
			{
				return this._packId;
			}
			set
			{
				if ((this._packId != value))
				{
					this.OnpackIdChanging(value);
					this.SendPropertyChanging();
					this._packId = value;
					this.SendPropertyChanged("packId");
					this.OnpackIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userId", DbType="BigInt NOT NULL")]
		public long userId
		{
			get
			{
				return this._userId;
			}
			set
			{
				if ((this._userId != value))
				{
					if (this._Users.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnuserIdChanging(value);
					this.SendPropertyChanging();
					this._userId = value;
					this.SendPropertyChanged("userId");
					this.OnuserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_created", DbType="DateTime NOT NULL")]
		public System.DateTime created
		{
			get
			{
				return this._created;
			}
			set
			{
				if ((this._created != value))
				{
					this.OncreatedChanging(value);
					this.SendPropertyChanging();
					this._created = value;
					this.SendPropertyChanged("created");
					this.OncreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_summOne", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> summOne
		{
			get
			{
				return this._summOne;
			}
			set
			{
				if ((this._summOne != value))
				{
					this.OnsummOneChanging(value);
					this.SendPropertyChanging();
					this._summOne = value;
					this.SendPropertyChanged("summOne");
					this.OnsummOneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_count", DbType="Decimal(18,3)")]
		public System.Nullable<decimal> count
		{
			get
			{
				return this._count;
			}
			set
			{
				if ((this._count != value))
				{
					this.OncountChanging(value);
					this.SendPropertyChanging();
					this._count = value;
					this.SendPropertyChanged("count");
					this.OncountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="TinyInt NOT NULL")]
		public byte status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_goodId", DbType="BigInt NOT NULL")]
		public long goodId
		{
			get
			{
				return this._goodId;
			}
			set
			{
				if ((this._goodId != value))
				{
					if (this._Goods.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OngoodIdChanging(value);
					this.SendPropertyChanging();
					this._goodId = value;
					this.SendPropertyChanged("goodId");
					this.OngoodIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isFastPay", DbType="Bit NOT NULL")]
		public bool isFastPay
		{
			get
			{
				return this._isFastPay;
			}
			set
			{
				if ((this._isFastPay != value))
				{
					this.OnisFastPayChanging(value);
					this.SendPropertyChanging();
					this._isFastPay = value;
					this.SendPropertyChanged("isFastPay");
					this.OnisFastPayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_summTotal", AutoSync=AutoSync.Always, DbType="Decimal(18,2)", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> summTotal
		{
			get
			{
				return this._summTotal;
			}
			set
			{
				if ((this._summTotal != value))
				{
					this.OnsummTotalChanging(value);
					this.SendPropertyChanging();
					this._summTotal = value;
					this.SendPropertyChanged("summTotal");
					this.OnsummTotalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_orderId", DbType="BigInt")]
		public System.Nullable<long> orderId
		{
			get
			{
				return this._orderId;
			}
			set
			{
				if ((this._orderId != value))
				{
					if (this._Orders.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnorderIdChanging(value);
					this.SendPropertyChanging();
					this._orderId = value;
					this.SendPropertyChanged("orderId");
					this.OnorderIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Goods_Basket", Storage="_Goods", ThisKey="goodId", OtherKey="id", IsForeignKey=true)]
		public Goods Goods
		{
			get
			{
				return this._Goods.Entity;
			}
			set
			{
				Goods previousValue = this._Goods.Entity;
				if (((previousValue != value) 
							|| (this._Goods.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Goods.Entity = null;
						previousValue.Basket.Remove(this);
					}
					this._Goods.Entity = value;
					if ((value != null))
					{
						value.Basket.Add(this);
						this._goodId = value.id;
					}
					else
					{
						this._goodId = default(long);
					}
					this.SendPropertyChanged("Goods");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Users_Basket", Storage="_Users", ThisKey="userId", OtherKey="id", IsForeignKey=true)]
		public Users Users
		{
			get
			{
				return this._Users.Entity;
			}
			set
			{
				Users previousValue = this._Users.Entity;
				if (((previousValue != value) 
							|| (this._Users.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Users.Entity = null;
						previousValue.Basket.Remove(this);
					}
					this._Users.Entity = value;
					if ((value != null))
					{
						value.Basket.Add(this);
						this._userId = value.id;
					}
					else
					{
						this._userId = default(long);
					}
					this.SendPropertyChanged("Users");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Orders_Basket", Storage="_Orders", ThisKey="orderId", OtherKey="id", IsForeignKey=true)]
		public Orders Orders
		{
			get
			{
				return this._Orders.Entity;
			}
			set
			{
				Orders previousValue = this._Orders.Entity;
				if (((previousValue != value) 
							|| (this._Orders.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Orders.Entity = null;
						previousValue.Basket.Remove(this);
					}
					this._Orders.Entity = value;
					if ((value != null))
					{
						value.Basket.Add(this);
						this._orderId = value.id;
					}
					else
					{
						this._orderId = default(Nullable<long>);
					}
					this.SendPropertyChanged("Orders");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="lk.Orders")]
	public partial class Orders : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _id;
		
		private System.Guid _transactionNumber;
		
		private System.Nullable<decimal> _summOrder;
		
		private long _userId;
		
		private System.DateTime _datePay;
		
		private EntitySet<Basket> _Basket;
		
		private EntityRef<Users> _Users;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(long value);
    partial void OnidChanged();
    partial void OntransactionNumberChanging(System.Guid value);
    partial void OntransactionNumberChanged();
    partial void OnsummOrderChanging(System.Nullable<decimal> value);
    partial void OnsummOrderChanged();
    partial void OnuserIdChanging(long value);
    partial void OnuserIdChanged();
    partial void OndatePayChanging(System.DateTime value);
    partial void OndatePayChanged();
    #endregion
		
		public Orders()
		{
			this._Basket = new EntitySet<Basket>(new Action<Basket>(this.attach_Basket), new Action<Basket>(this.detach_Basket));
			this._Users = default(EntityRef<Users>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_transactionNumber", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid transactionNumber
		{
			get
			{
				return this._transactionNumber;
			}
			set
			{
				if ((this._transactionNumber != value))
				{
					this.OntransactionNumberChanging(value);
					this.SendPropertyChanging();
					this._transactionNumber = value;
					this.SendPropertyChanged("transactionNumber");
					this.OntransactionNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_summOrder", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> summOrder
		{
			get
			{
				return this._summOrder;
			}
			set
			{
				if ((this._summOrder != value))
				{
					this.OnsummOrderChanging(value);
					this.SendPropertyChanging();
					this._summOrder = value;
					this.SendPropertyChanged("summOrder");
					this.OnsummOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userId", DbType="BigInt NOT NULL")]
		public long userId
		{
			get
			{
				return this._userId;
			}
			set
			{
				if ((this._userId != value))
				{
					if (this._Users.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnuserIdChanging(value);
					this.SendPropertyChanging();
					this._userId = value;
					this.SendPropertyChanged("userId");
					this.OnuserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_datePay", DbType="DateTime NOT NULL")]
		public System.DateTime datePay
		{
			get
			{
				return this._datePay;
			}
			set
			{
				if ((this._datePay != value))
				{
					this.OndatePayChanging(value);
					this.SendPropertyChanging();
					this._datePay = value;
					this.SendPropertyChanged("datePay");
					this.OndatePayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Orders_Basket", Storage="_Basket", ThisKey="id", OtherKey="orderId")]
		public EntitySet<Basket> Basket
		{
			get
			{
				return this._Basket;
			}
			set
			{
				this._Basket.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Users_Orders", Storage="_Users", ThisKey="userId", OtherKey="id", IsForeignKey=true)]
		public Users Users
		{
			get
			{
				return this._Users.Entity;
			}
			set
			{
				Users previousValue = this._Users.Entity;
				if (((previousValue != value) 
							|| (this._Users.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Users.Entity = null;
						previousValue.Orders.Remove(this);
					}
					this._Users.Entity = value;
					if ((value != null))
					{
						value.Orders.Add(this);
						this._userId = value.id;
					}
					else
					{
						this._userId = default(long);
					}
					this.SendPropertyChanged("Users");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Basket(Basket entity)
		{
			this.SendPropertyChanging();
			entity.Orders = this;
		}
		
		private void detach_Basket(Basket entity)
		{
			this.SendPropertyChanging();
			entity.Orders = null;
		}
	}
	
	public partial class GetNowWatchingResult
	{
		
		private long _id;
		
		private string _name;
		
		private long _typeId;
		
		private decimal _price;
		
		private string _info;
		
		private string _imageUrl;
		
		private short _discount;
		
		private string _typeName;
		
		private string _typeInfo;
		
		public GetNowWatchingResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="BigInt NOT NULL")]
		public long id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this._id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(25) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this._name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_typeId", DbType="BigInt NOT NULL")]
		public long typeId
		{
			get
			{
				return this._typeId;
			}
			set
			{
				if ((this._typeId != value))
				{
					this._typeId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_price", DbType="Decimal(10,2) NOT NULL")]
		public decimal price
		{
			get
			{
				return this._price;
			}
			set
			{
				if ((this._price != value))
				{
					this._price = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_info", DbType="NVarChar(50)")]
		public string info
		{
			get
			{
				return this._info;
			}
			set
			{
				if ((this._info != value))
				{
					this._info = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_imageUrl", DbType="VarChar(200)")]
		public string imageUrl
		{
			get
			{
				return this._imageUrl;
			}
			set
			{
				if ((this._imageUrl != value))
				{
					this._imageUrl = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_discount", DbType="SmallInt NOT NULL")]
		public short discount
		{
			get
			{
				return this._discount;
			}
			set
			{
				if ((this._discount != value))
				{
					this._discount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_typeName", DbType="NVarChar(25)")]
		public string typeName
		{
			get
			{
				return this._typeName;
			}
			set
			{
				if ((this._typeName != value))
				{
					this._typeName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_typeInfo", DbType="NVarChar(50)")]
		public string typeInfo
		{
			get
			{
				return this._typeInfo;
			}
			set
			{
				if ((this._typeInfo != value))
				{
					this._typeInfo = value;
				}
			}
		}
	}
	
	public partial class PopularGoodsResult
	{
		
		private long _id;
		
		private string _name;
		
		private long _typeId;
		
		private decimal _price;
		
		private string _info;
		
		private string _imageUrl;
		
		private short _discount;
		
		private string _typeName;
		
		private string _typeInfo;
		
		public PopularGoodsResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="BigInt NOT NULL")]
		public long id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this._id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(25) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this._name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_typeId", DbType="BigInt NOT NULL")]
		public long typeId
		{
			get
			{
				return this._typeId;
			}
			set
			{
				if ((this._typeId != value))
				{
					this._typeId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_price", DbType="Decimal(10,2) NOT NULL")]
		public decimal price
		{
			get
			{
				return this._price;
			}
			set
			{
				if ((this._price != value))
				{
					this._price = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_info", DbType="NVarChar(500)")]
		public string info
		{
			get
			{
				return this._info;
			}
			set
			{
				if ((this._info != value))
				{
					this._info = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_imageUrl", DbType="VarChar(200)")]
		public string imageUrl
		{
			get
			{
				return this._imageUrl;
			}
			set
			{
				if ((this._imageUrl != value))
				{
					this._imageUrl = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_discount", DbType="SmallInt NOT NULL")]
		public short discount
		{
			get
			{
				return this._discount;
			}
			set
			{
				if ((this._discount != value))
				{
					this._discount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_typeName", DbType="NVarChar(25)")]
		public string typeName
		{
			get
			{
				return this._typeName;
			}
			set
			{
				if ((this._typeName != value))
				{
					this._typeName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_typeInfo", DbType="NVarChar(50)")]
		public string typeInfo
		{
			get
			{
				return this._typeInfo;
			}
			set
			{
				if ((this._typeInfo != value))
				{
					this._typeInfo = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
